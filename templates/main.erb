package amazon

// <%= operation %>ResponseGroup represents constants those are capable ResponseGroups parameter
type <%= operation %>ResponseGroup string

<%
  rgs = {
    ItemSearch: %w(
      Accessories AlternateVersions BrowseNodes EditorialReview Images ItemAttributesItemIds
      Large ListmaniaLists Medium MerchantItemAttributes OfferFull OfferListings Offers OfferSummary
      PromotionalTag PromotionDetails PromotionSummary RelatedItems Reviews SalesRank SearchBins
      SearchInside Similarities Small Subjects Tracks VariationMatrix VariationMinimum
      VariationOffers Variations VariationSummary
    ),
    BrowseNodeLookup: %w(BrowseNodeInfo NewReleases MostGifted TopSellers MostWishedFor),
    ItemLookup: %w(
      Accessories AlternateVersions BrowseNodes EditorialReview Images ItemAttributesItemIds
      Large ListmaniaLists Medium MerchantItemAttributes OfferFull OfferListings Offers OfferSummary
      PromotionalTag PromotionDetails PromotionSummary RelatedItems Reviews SalesRank
      SearchInside ShippingCharges Similarities Small Subjects Tracks VariationImages
      VariationMatrix VariationMinimum VariationOffers Variations VariationSummary
    ),
    SimilarityLookup: %w(
      BrowseNodes PromotionDetails EditorialReview PromotionSummary Images Reviews ItemAttributes SalesRankItemIds Similarities
      Large Small ListmaniaLists Subjects Medium Tracks OfferFull VariationMinimum OfferListings Variations Offers VariationSummary
    ),
    CartAdd: %w(
     Cart CartSimilarities CartNewReleases CartTopSellers
    ),
    CartClear: %w(Cart),
    CartCreate: %w(Cart CartSimilarities CartNewReleases CartTopSellers),
    CartGet: %w(Cart CartTopSellers CartSimilarities CartNewReleases),
    CartModify: %w(Cart CartSimilarities CartNewReleases CartTopSellers)
  }[operation.to_sym]
%>
const (
<%= rgs.map{|rg| "\t// #{operation}ResponseGroup#{rg} is a constant for #{rg} response group\n\t#{operation}ResponseGroup#{rg} #{operation}ResponseGroup = \"#{rg}\"" }.join("\n") %>)

// <%= operation %>Request represents request for <%= operation %> operation
type <%= operation %>Request struct {
  ResponseGroups []<%= operation %>ResponseGroup
  Client *Client
}

// <%= operation %>Response represents response for <%= operation %> operation
type <%= operation %>Response struct {
  Error error
}

func (req *<%= operation %>Request)buildQuery() map[string]string {
  q := map[string]string{}
  return q
}

// Do send request for the API
func (req *<%= operation %>Request)Do() (*<%= operation %>Response, error) {
  return nil, nil
}

// <%= operation %> returns new request for <%= operation %>
func (client *Client) <%= operation %>(responseGroups ...<%= operation %>ResponseGroup) *<%= operation %>Request {
  return &<%= operation %>Request{
    Client: client,
    ResponseGroups: responseGroups,
  }
}
